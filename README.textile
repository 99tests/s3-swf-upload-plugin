h1. S3SwfUpload Gem For Rails 3

S3SwfUpload allows user to upload a file to S3 directly, so you can save the cost of uploading process in your app server.

h2. Installation

This fork is designed to allow you to use this plugin as a gem in rails 3, so just follow the usage steps below.

h2. Example

GreenAsJade has a sample application running at http://demo-s3-swf-upload.heroku.com/

This demonstrates the same basic functionality.  However this fork is based on PVR's fork, which has some additional UI changes.

h2. Usage

1. Edit <code>Gemfile</code> and add this as a gem, you'll also need aws-s3

<pre><code>gem 's3_swf_upload', :git => 'git://github.com/nathancolgate/s3-swf-upload-plugin'
gem 'aws-s3', :require => 'aws/s3'
</code></pre>
	
2. Bundle it!

<pre><code>$ bundle install
</code></pre>

3. Run the generator

<pre><code>$ rails generate s3_swf_upload:uploader
</code></pre>
	
4. Configure your amazon parameters via the generated <code>config/amazon_s3.yml</code> file.

5. Generate the bucket (if you haven't already)

<pre><code>$ rake s3_swf_upload:make_bucket
</code></pre>
	
6. Upload the crossdomain.xml file (if you haven't already)

<pre><code>$ rake s3_swf_upload:make_crossdomain
</code></pre>

7. Edit <code>app/controller/s3_uploads_controller.rb</code>

You need to skip any authentication for this controller, the flash needs to be able to access it.  There's a big comment showing you where to do this :) 

8. Initialize the SWF object in your view using this handy helper:

<pre><code><%= s3_swf_upload_tag %>
</code></pre>

9. When you click upload, your file will be upload to http://bucket.s3.amazonasw.com/ by default.

IE the default prefix is '' (no prefix)

10. If you want to customise its behavior, here's a more complex example:

<pre><code><%= raw s3_swf_upload_tag(
	:width => 390,
	:height => 150,
	:file_types=>'*.jpg;*.gif;*.png;',
	:file_type_descriptions =>"Image files.",
	:success => "alert('SUCCESS! filename: ' + filename + ', filesize: ' + filesize + ', content_type: ' + contenttype);",
	:failed => 'alert("FAILURE! status: " + status);',
	:info => 'document.getElementById("upload-messages").innerHTML = status;',
	:prefix => "public/attachment",
	:initial_message=> 'Click "Browse..." to find files to upload.')
%>
<div id="upload-messages" name="upload-messages" class="notice"></div>
</code></pre>

In this case, files will be uploaded to http://bucket.s3.amazonasw.com/public/attachment/filename

11. If you need to check that the file they have selected is legitimate, before it gets uploaded, (for example, to make sure they aren't overwriting a file of the same name your database knows is already uploaded):

i) Supply a method s3_swf_upload_error? in your application.rb to check, like this:

<pre><code>def s3_swf_upload_file_error?(filename)
	Mod.find_by_zip_name(File::basename(filename)) ?
		"Sorry, there is already a mod with that zip file name!" :
		nil
end
</code></pre>

Note that this method must return nil if there no error.

ii) Set the option

<pre><code>:do_checks => '1'
</code></pre>

in the s3_swf_upload_tag

h3. Kudos

Original plugin is Copyright (c) 2008 elctech, released under the MIT license

Updates to plugin for multiple file uploader are Copyright (c) 2010 PRX, released under the MIT license

Conversion of plugin to gem for rails 3 is Copyright (c) 2010 Nathan Colgate, released under the MIT license

